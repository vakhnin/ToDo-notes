version: '2.3'

services:
  db:
    image: postgres:14.7-alpine
    container_name: db-container
    expose:
      - 5432
    environment:
      POSTGRES_USER: db_user
      POSTGRES_PASSWORD: db_user
      POSTGRES_DB: todo
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d todo -U db_user"]
      interval: 1s
      timeout: 5s
      retries: 10
    labels:
      logging: "commonlogs"
    networks:
      - production_network
      

  backend:
    image: backend_django:1.0.0
    container_name: backend-container
    build:
      context: ..
    expose:
      - 8080
    command: >
      bash -c "python manage.py migrate
      && python manage.py fill_db --all
      &&  gunicorn todo_notes.wsgi -b 0.0.0.0:8080"
    environment:
      - TODONOTES_ON_SERVER=True
    depends_on:
      db:
        condition: service_healthy
    labels:
      logging: "commonlogs"
    networks:
      - production_network

  nginx:
    container_name: nginx-container
    build: ./nginx
    ports:
      - 8000:8010
    depends_on:
      - backend
    labels:
      logging: "nginxlogs"
    networks:
      - production_network

  frontend:
    container_name: frontend-container
    build: ../frontend
    ports:
      - 80:80
    depends_on:
      - nginx
    labels:
      logging: "commonlogs"
    networks:
      - production_network
      
networks:
  production_network:
    driver: bridge
    name: production_network
